import logging
from aiogram import F, Router, types

from keyboards.inline_keyboards import admin_kb, start_kb
from keyboards.keyboard_creator import make_row_inline_keyboards
from config import ADMIN_USER_IDS

router = Router()


@router.callback_query(F.data == 'settings_bot')
async def settings_bot(callback_query: types.CallbackQuery):
    # –ó–∞—â–∏—Ç–∞: —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –æ—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    if callback_query.from_user.id not in ADMIN_USER_IDS:
        await callback_query.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
        return

    await callback_query.answer("‚ñ∂Ô∏è")
    try:

        admin_text = (
            "üõ†Ô∏è <b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{callback_query.from_user.full_name}</b> (<code>{callback_query.from_user.id}</code>)\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–º:"
        )

        if callback_query.message:
            try:
                await callback_query.message.edit_text(
                    text=admin_text,
                    reply_markup=make_row_inline_keyboards(admin_kb),
                )

            except Exception:
                await callback_query.message.answer(
                    text=admin_text,
                    reply_markup=make_row_inline_keyboards(admin_kb),
                )
        else:
            await callback_query.message.answer(
                text=admin_text,
                reply_markup=make_row_inline_keyboards(admin_kb),
            )

    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –≤ settings_bot callback: %s", e)
        await callback_query.message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")


@router.callback_query(F.data == 'admin_back_to_main')
async def admin_back_to_main(callback_query: types.CallbackQuery):
    await callback_query.answer("‚óÄÔ∏è")

    welcome_text = (
        "üè† <b>–°—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω</b>\n\n"
        "–ü–æ–¥–±–µ—Ä–∏—Ç–µ –º–µ–±–µ–ª—å –ø–æ–¥ –≤–∞—à —Å—Ç–∏–ª—å –∏ –∑–∞–¥–∞—á–∏.\n"
        "–û—Ç–∫—Ä–æ–π—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –∏ –∏–∑—É—á–∞–π—Ç–µ –º–æ–¥–µ–ª–∏.\n\n"
        "–ù–∞—á–Ω–µ–º? üëá"
    )

    # –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º
    if callback_query.from_user.id in ADMIN_USER_IDS:
        keyboard = start_kb + [("‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º", 'settings_bot')]
    else:
        keyboard = start_kb

    await callback_query.message.edit_text(text=welcome_text, reply_markup=make_row_inline_keyboards(keyboard))