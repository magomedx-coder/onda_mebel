import logging
from aiogram import F, Router, types

from keyboards.inline_keyboards import admin_kb, start_kb
from keyboards.keyboard_creator import make_row_inline_keyboards

router = Router()


@router.callback_query(F.data == 'settings_bot')
async def settings_bot(callback_query: types.CallbackQuery):
    await callback_query.answer("‚ñ∂Ô∏è")
    try:

        admin_text = (
            "üîß <b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n"
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{callback_query.from_user.full_name}</b> (<code>{callback_query.from_user.id}</code>)\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ ‚Äî –∫–Ω–æ–ø–∫–∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –∑–∞–¥–∞—á–∞–º:\n\n"
        )

        if callback_query.message:
            try:
                await callback_query.message.edit_text(
                    text=admin_text,
                    reply_markup=make_row_inline_keyboards(admin_kb),
                )

            except Exception:
                await callback_query.message.answer(
                    text=admin_text,
                    reply_markup=make_row_inline_keyboards(admin_kb),
                )
        else:
            await callback_query.message.answer(
                text=admin_text,
                reply_markup=make_row_inline_keyboards(admin_kb),
            )

    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –≤ settings_bot callback: %s", e)
        await callback_query.message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")


@router.callback_query(F.data == 'back_to_main')
async def back_to_main(callback_query: types.CallbackQuery):
    await callback_query.answer("‚óÄÔ∏è")

    welcome_text = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üõãÔ∏è\n\n"
        "–ù–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω—É—é –º–µ–±–µ–ª—å –¥–ª—è –ª—é–±–æ–≥–æ —É–≥–æ–ª–∫–∞ –≤–∞—à–µ–≥–æ –¥–æ–º–∞.\n\n"
        "–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ:\n"
        "‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ –º–æ–¥–µ–ª–µ–π.\n"
        "‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n"
        "‚Ä¢ –û—Ñ–æ—Ä–º–∏—Ç–µ –±—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑.\n\n"
        "üîÑ –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è ¬´–ù–∞–∑–∞–¥¬ª.\n"
        "üìû –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–∞—à–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω.\n\n"
        "–í—ã–±–∏—Ä–∞–π—Ç–µ, —Å —á–µ–≥–æ –Ω–∞—á–Ω—ë–º? üëá"
    )
    keyboard = start_kb + [("‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞", 'settings_bot')]
    await callback_query.message.edit_text(text=welcome_text, reply_markup=make_row_inline_keyboards(keyboard))