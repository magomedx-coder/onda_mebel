import logging

from aiogram import Router, types, filters, F
from aiogram.fsm.context import FSMContext
from sqlalchemy.exc import IntegrityError

# from keyboards.inline_keyboards import start_kb
from keyboards.keyboard_creator import make_row_inline_keyboards

from database.crud import UserCrud, CategoryRepository
from config import ADMIN_USER_IDS

router = Router()


@router.message(filters.Command("start"))
@router.message(F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def start(message: types.Message, state: FSMContext):
    await state.clear()

    intro_text = (
        "‚ú® <b>–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å!</b> ‚ú®\n\n"
        "–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –º–µ–±–µ–ª—å –ø–æ–¥ –ª—é–±—ã–µ –∑–∞–¥–∞—á–∏ –∏ —Å—Ç–∏–ª–∏ ‚Äî –æ—Ç –±–∞–∑–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π –¥–æ –ø—Ä–µ–º–∏—É–º-–º–æ–¥–µ–ª–µ–π.\n\n"
        "<b>–†–∞–∑–¥–µ–ª—ã –∫–∞—Ç–∞–ª–æ–≥–∞:</b>\n"
        "‚Ä¢ –°–ø–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Ç—ã\n"
        "‚Ä¢ –ö—É—Ö–Ω–∏ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º\n"
        "‚Ä¢ –î–∏–≤–∞–Ω—ã –∏ –∫—Ä–µ—Å–ª–∞\n"
        "‚Ä¢ –û–±–µ–¥–µ–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã\n"
        "‚Ä¢ –ö–æ–º–æ–¥—ã –∏ —Ç—É–º–±—ã\n"
        "‚Ä¢ –®–∫–∞—Ñ—ã-–∫—É–ø–µ –∏ –≥–∞—Ä–¥–µ—Ä–æ–±–Ω—ã–µ\n\n"
        "<b>–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑:</b>\n"
        "1) –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª\n"
        "2) –û—Ç–∫—Ä–æ–π—Ç–µ –º–æ–¥–µ–ª–∏\n"
        "3) –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º\n\n"
        "‚ÑπÔ∏è –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n"
        "‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ üëá"
    )

    telegram_id = message.from_user.id
    crud = UserCrud()

    try:
       
        should_be_admin = telegram_id in ADMIN_USER_IDS

        
        added_user = await crud.add_user(
            telegram_id=telegram_id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
            is_admin=should_be_admin,
        )
        if added_user:
            logging.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. Admin=%s", telegram_id, should_be_admin)
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º admin-—Å—Ç–∞—Ç—É—Å —Å –∫–æ–Ω—Ñ–∏–≥–æ–º
            await crud.set_admin_status(telegram_id, should_be_admin)
            logging.info("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. Admin —Å—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω: %s", telegram_id, should_be_admin)

    except IntegrityError as ie:
        logging.exception("‚ùå IntegrityError –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s: %s", telegram_id, ie)

    except Exception as e:
        logging.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s: %s", telegram_id, e)

    user = await crud.get_user_by_telegram_id(message.from_user.id)

   
    categories_repo = CategoryRepository()
    categories = await categories_repo.get_all_categories()
    keyboard_items = [(cat.name, f"open_category_{cat.id}") for cat in categories]
    keyboard_items = [(cat.name, f"open_category_{cat.name}") for cat in categories]

    
    keyboard_items += [
        ("‚ÑπÔ∏è –û –Ω–∞—Å –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã", "about_company"),
        ("ü§ù –û–ø—Ç–æ–≤–∏–∫–∞–º", "cooperation_company"),
    ]

    
    if user and user.is_admin:
        keyboard_items += [("‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º", "settings_bot")]

    await message.answer(
        text=intro_text,
        reply_markup=make_row_inline_keyboards(keyboard_items)
    )